import sqlite3
from vkbottle.bot import Bot, Message
import re
from database import add_user, get_balance, update_balance
from shop import SHOP
from database import get_db_connection

TOKEN = "vk1.a.dAqeMkcX_NKGA4yshYUCrB2mNhoxoLK3fJWxBbf3oWlUfv50YQ3371dAqmAEbXOmwyASe0QhtRiw4VaJhxdXCMcpK32Pq9h9DpX_e_OkBjy1By5E2XnmkFEYNN04VmLLzuVG7SV_ga10jOZv0hq64Gb1mBXHN_JojVvgkinqGbZbfQuxabYnsBTM0N0CvaadAt2uo-_q7WDPOAlIwS1HSg"
ADMINS = [527055305]  # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
async def get_user_name(user_id: int) -> str:
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = await bot.api.users.get(user_ids=user_id)
    user = user_info[0]  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç
    return f"{user.first_name} {user.last_name}"

@bot.on.message(text="/—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
async def staff_handler(message: Message):
    staff = get_staff()
    if not staff:
        await message.reply("–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—É—Å—Ç.")
        return

    staff_text = "üìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n"
    roles = {
        "owner": "–ì–ª–∞–≤–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä",
        "chief": "–ì–ª–∞–≤–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä 75",
        "zgm": "–ó–∞–º.–ì–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
        "cur": "–ö—É—Ä–∞—Ç–æ—Ä –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
    }

    for role, description in roles.items():
        staff_text += f"\nüîπ {description}:\n"
        for user_id, user_role in staff:
            if user_role == role:
                user_name = await get_user_name(user_id)  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                staff_text += f"  [https://vk.com/id{user_id}|{user_name}]\n"

    await message.reply(staff_text)

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
async def get_user_id_from_mention(message: Message, mention: str) -> int:
    match = re.match(r"\[id(\d+)\|", mention)
    if match:
        return int(match.group(1))
    if mention.isdigit():
        return int(mention)
    return None

def get_db_connection():
    conn = sqlite3.connect('C:\\Users\\Asus\\vk_bot\\database.db')  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    return conn

# –û–ø—Ä–µ–¥–µ–ª–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ä–æ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
ROLE_PRIORITY = {
    "owner": 5,
    "chief": 4,
    "zgm": 3,
    "cur": 2,
    "user": 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å
def can_assign_role(current_role, target_role):
    return ROLE_PRIORITY[current_role] > ROLE_PRIORITY[target_role]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_user_role(user_id):
    conn = sqlite3.connect('C:\\Users\\Asus\\vk_bot\\database.db')  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    cursor.execute("SELECT role FROM users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else "user"  # –ï—Å–ª–∏ —Ä–æ–ª–∏ –Ω–µ—Ç, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º "user"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def set_role(user_id, role, current_user_role):
    if not can_assign_role(current_user_role, role):
        return False  # –ï—Å–ª–∏ —É —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å –Ω–∏–∂–µ, –æ—Ç–∫–∞–∑–∞—Ç—å
    
    conn = sqlite3.connect('C:\\Users\\Asus\\vk_bot\\database.db')  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor = conn.cursor()
    cursor.execute("INSERT OR REPLACE INTO users (user_id, role) VALUES (?, ?)", (user_id, role))
    conn.commit()
    conn.close()
    return True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
def get_staff():
    conn = sqlite3.connect('C:\\Users\\Asus\\vk_bot\\database.db')  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.row_factory = sqlite3.Row
    cursor = conn.cursor()
    cursor.execute("SELECT user_id, role FROM users")
    staff = cursor.fetchall()
    conn.close()
    return staff

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.on.message(text="/addowner <mention>")
async def add_owner_handler(message: Message, mention: str):
    user_id = message.from_id  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É
    target_user_id = await get_user_id_from_mention(message, mention)  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —É–ø–æ–º—è–Ω—É–ª–∏

    if not target_user_id:
        await message.answer("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏.")
        return

    current_user_role = get_user_role(user_id)  # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if set_role(target_user_id, "owner", current_user_role):
        await message.answer(f"–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id{target_user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–µ—Å–µ–¥—ã.")
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.on.message(text="/addchief <mention>")
async def add_chief_handler(message: Message, mention: str):
    user_id = message.from_id
    target_user_id = await get_user_id_from_mention(message, mention)

    if not target_user_id:
        await message.answer("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏.")
        return

    current_user_role = get_user_role(user_id)
    if set_role(target_user_id, "chief", current_user_role):
        await message.answer(f"–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id{target_user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –≥–ª–∞–≤–Ω—ã–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º (75).")
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.on.message(text="/addzgm <mention>")
async def add_zgm_handler(message: Message, mention: str):
    user_id = message.from_id
    target_user_id = await get_user_id_from_mention(message, mention)

    if not target_user_id:
        await message.answer("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏.")
        return

    current_user_role = get_user_role(user_id)
    if set_role(target_user_id, "zgm", current_user_role):
        await message.answer(f"–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id{target_user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.")
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.on.message(text="/addcur <mention>")
async def add_cur_handler(message: Message, mention: str):
    user_id = message.from_id
    target_user_id = await get_user_id_from_mention(message, mention)

    if not target_user_id:
        await message.answer("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏.")
        return

    current_user_role = get_user_role(user_id)
    if set_role(target_user_id, "cur", current_user_role):
        await message.answer(f"–í—ã –Ω–∞–∑–Ω–∞—á–∏–ª–∏ [id{target_user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –∫—É—Ä–∞—Ç–æ—Ä–æ–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏.")
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
@bot.on.message(text="/user <mention>")
async def remove_owner_handler(message: Message, mention: str):
    user_id = message.from_id  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É
    target_user_id = await get_user_id_from_mention(message, mention)  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —É–ø–æ–º—è–Ω—É–ª–∏

    if not target_user_id:
        await message.answer("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏.")
        return

    current_user_role = get_user_role(user_id)  # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if can_assign_role(current_user_role, "chief"):
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å–Ω—è—Ç—å —Ä–æ–ª—å
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET role = NULL WHERE user_id = ?", (target_user_id,))
        conn.commit()
        conn.close()

        await message.answer(f"–†–æ–ª—å –±—ã–ª–∞ —Å–Ω—è—Ç–∞ —Å [id{target_user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è].")
    else:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏.")

# –ö–æ–º–∞–Ω–¥–∞ "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
@bot.on.message(text="/reg")
async def register_handler(message: Message):
    user_id = message.from_id

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if add_user(user_id):  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ add_user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω, –∏ False, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            await message.reply("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        else:
            await message.reply("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
    except Exception as e:
        await message.reply(f"‚õî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –º–æ–Ω–µ—Ç
@bot.on.message(text="–≤—ã–¥–∞—Ç—å <mention> <amount:int>")
async def give_coins_handler(message: Message, mention: str, amount: int):
    if message.from_id not in ADMINS:
        await message.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    if amount <= 0:
        await message.reply("‚õî –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
        return

    user_id = await get_user_id_from_mention(message, mention)
    if not user_id:
        await message.reply("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    current_balance = get_balance(user_id)
    new_balance = current_balance + amount
    update_balance(user_id, new_balance)

    await message.reply(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ {amount} –º–æ–Ω–µ—Ç [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é]. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance}.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.on.message(text="/cmd")
async def commands_handler(message: Message):
    commands_text = """
    üìù –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:

    –ö–æ–º–∞–Ω–¥—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:
    /—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∏—Ö —Ä–æ–ª–∏.
    /reg - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ.
    /balance - –ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /shop - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ.
    /buy - –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.
    /rr - –∏–≥—Ä–∞—Ç—å –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É.

    –ö–æ–º–∞–Ω–¥—ã –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:
    /addcur - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—É—Ä–∞—Ç–æ—Ä–æ–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏.
    /user - —Å–Ω—è—Ç—å —Ä–æ–ª—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ö–æ–º–∞–Ω–¥—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:
    /–æ–±–Ω—É–ª–∏—Ç—å - –æ–±–Ω—É–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /addzgm - –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.
    /–≤—ã–¥–∞—Ç—å - –≤—ã–¥–∞—Ç—å –∫–æ–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    await message.reply(commands_text)

# –ö–æ–º–∞–Ω–¥–∞ "–±–∞–ª–∞–Ω—Å"
@bot.on.message(text="/balance")
async def balance_handler(message: Message):
    user_id = message.from_id
    add_user(user_id)
    balance = get_balance(user_id)
    await message.reply(f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} Moderation Coins.")

# –ö–æ–º–∞–Ω–¥–∞ "–º–∞–≥–∞–∑–∏–Ω"
@bot.on.message(text="/shop")
async def shop_handler(message: Message):
    shop_text = "üìú –ú–∞–≥–∞–∑–∏–Ω:\n"
    for category, items in SHOP.items():
        shop_text += f"\nüîπ {category}\n"
        for item_id, item in items.items():
            shop_text += f"  {item_id}. {item['name']} ‚Äî {item['price']} M-Coins\n"
    await message.reply(shop_text)

# –ö–æ–º–∞–Ω–¥–∞ "–∫—É–ø–∏—Ç—å"
@bot.on.message(text="/buy <item_id:int>")
async def buy_handler(message: Message, item_id: int):
    user_id = message.from_id
    add_user(user_id)

    item = None
    for category_items in SHOP.values():
        item = category_items.get(item_id)
        if item:
            break

    if not item:
        await message.reply("–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ!")
        return

    balance = get_balance(user_id)
    if balance < item["price"]:
        await message.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ M-Coins –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")
        return

    update_balance(user_id, -item["price"])
    await message.reply(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ {item['name']} –∑–∞ {item['price']} –º–æ–Ω–µ—Ç!")

# –ö–æ–º–∞–Ω–¥–∞ "—Ä—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞"
@bot.on.message(text="/rr")
async def russian_roulette_handler(message: Message):
    import random
    user_id = message.from_id
    add_user(user_id)

    balance = get_balance(user_id)
    if balance < 10:
        await message.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ M-Coins –¥–ª—è –∏–≥—Ä—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 10 –º–æ–Ω–µ—Ç.")
        return

    update_balance(user_id, -10)  # –°–Ω–∏–º–∞–µ–º 10 –º–æ–Ω–µ—Ç –∑–∞ —É—á–∞—Å—Ç–∏–µ
    if random.randint(1, 6) == 1:
        prize = 50
        update_balance(user_id, prize)
        await message.reply(f"üí• –ë–∞—Ö! –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏ –≤—ã–∏–≥—Ä–∞–ª–∏ {prize} –º–æ–Ω–µ—Ç! –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {get_balance(user_id)} –º–æ–Ω–µ—Ç.")
    else:
        await message.reply(f"üòå –û—Å–µ—á–∫–∞. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ 10 –º–æ–Ω–µ—Ç. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {get_balance(user_id)} –º–æ–Ω–µ—Ç.")

# –ö–æ–º–∞–Ω–¥–∞ "–æ–±–Ω—É–ª–∏—Ç—å"
@bot.on.message(text="/–æ–±–Ω—É–ª–∏—Ç—å <mention>")
async def reset_balance_handler(message: Message, mention: str):
    if message.from_id not in ADMINS:
        await message.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    user_id = await get_user_id_from_mention(message, mention)
    if not user_id:
        await message.reply("‚õî –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è.")
        return

    try:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 0
        update_balance(user_id, -get_balance(user_id))  # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –º–æ–Ω–µ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–∞
        await message.reply(f"‚úÖ –ë–∞–ª–∞–Ω—Å [id{user_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] –±—ã–ª –æ–±–Ω—É–ª–µ–Ω.")
    except Exception as e:
        await message.reply(f"‚õî –û—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run_forever()
